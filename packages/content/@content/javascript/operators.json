{
  "self": [
    "javascript",
    "operators"
  ],
  "type": "listing",
  "title": "Expressions and operators",
  "links": {
    "mdn": "https://developer.mozilla.org/docs/Web/JavaScript/Reference/Operators",
    "github": "https://github.com/mdn/content/blob/main/files/en-us/web/javascript/reference/operators/index.md"
  },
  "content": {
    "intro": {
      "id": "f607894a1dc516f3132860abd64e8759",
      "tree": {
        "type": "root",
        "children": [
          {
            "type": "element",
            "tagName": "p",
            "properties": {},
            "children": [
              {
                "type": "text",
                "value": "This chapter documents all the JavaScript language operators, expressions and keywords."
              }
            ]
          }
        ],
        "data": {
          "quirksMode": false
        }
      }
    },
    "seeAlso": {
      "id": "17a8ca69ccbaba92a3541f58b7c521ea",
      "tree": {
        "type": "root",
        "children": [
          {
            "type": "element",
            "tagName": "ul",
            "properties": {},
            "children": [
              {
                "type": "text",
                "value": "\n"
              },
              {
                "type": "element",
                "tagName": "li",
                "properties": {},
                "children": [
                  {
                    "type": "element",
                    "tagName": "a",
                    "properties": {
                      "href": "/en-US/docs/Web/JavaScript/Reference/Operators/Operator_Precedence"
                    },
                    "children": [
                      {
                        "type": "text",
                        "value": "Operator precedence"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "text",
                "value": "\n"
              }
            ]
          }
        ],
        "data": {
          "quirksMode": false
        }
      }
    }
  },
  "commit": {
    "sha": "2200e5ab44a8763c71e51c38206de102828c20ac",
    "date": "2022-04-26T22:27:12.000Z"
  },
  "children": [
    {
      "title": "Addition (+)",
      "href": "/javascript/operators/addition"
    },
    {
      "title": "Addition assignment (+=)",
      "href": "/javascript/operators/addition_assignment"
    },
    {
      "title": "Assignment (=)",
      "href": "/javascript/operators/assignment"
    },
    {
      "title": "async function expression",
      "href": "/javascript/operators/async_function"
    },
    {
      "title": "operators / async_generator_function",
      "href": "/javascript/operators/async_generator_function"
    },
    {
      "title": "await",
      "href": "/javascript/operators/await"
    },
    {
      "title": "Bitwise AND (&)",
      "href": "/javascript/operators/bitwise_and"
    },
    {
      "title": "Bitwise AND assignment (&=)",
      "href": "/javascript/operators/bitwise_and_assignment"
    },
    {
      "title": "Bitwise NOT (~)",
      "href": "/javascript/operators/bitwise_not"
    },
    {
      "title": "Bitwise OR (|)",
      "href": "/javascript/operators/bitwise_or"
    },
    {
      "title": "Bitwise OR assignment (|=)",
      "href": "/javascript/operators/bitwise_or_assignment"
    },
    {
      "title": "Bitwise XOR (^)",
      "href": "/javascript/operators/bitwise_xor"
    },
    {
      "title": "Bitwise XOR assignment (^=)",
      "href": "/javascript/operators/bitwise_xor_assignment"
    },
    {
      "title": "class expression",
      "href": "/javascript/operators/class"
    },
    {
      "title": "Comma operator (,)",
      "href": "/javascript/operators/comma"
    },
    {
      "title": "Conditional (ternary) operator",
      "href": "/javascript/operators/conditional"
    },
    {
      "title": "Decrement (--)",
      "href": "/javascript/operators/decrement"
    },
    {
      "title": "delete operator",
      "href": "/javascript/operators/delete"
    },
    {
      "title": "Destructuring assignment",
      "href": "/javascript/operators/destructuring"
    },
    {
      "title": "Division (/)",
      "href": "/javascript/operators/division"
    },
    {
      "title": "Division assignment (/=)",
      "href": "/javascript/operators/division_assignment"
    },
    {
      "title": "Equality (==)",
      "href": "/javascript/operators/equality"
    },
    {
      "title": "Exponentiation (**)",
      "href": "/javascript/operators/exponentiation"
    },
    {
      "title": "Exponentiation assignment (**=)",
      "href": "/javascript/operators/exponentiation_assignment"
    },
    {
      "title": "Function expression",
      "href": "/javascript/operators/function"
    },
    {
      "title": "function* expression",
      "href": "/javascript/operators/generator_function"
    },
    {
      "title": "Greater than (>)",
      "href": "/javascript/operators/greater_than"
    },
    {
      "title": "Greater than or equal (>=)",
      "href": "/javascript/operators/greater_than_or_equal"
    },
    {
      "title": "Grouping operator ( )",
      "href": "/javascript/operators/grouping"
    },
    {
      "title": "import",
      "href": "/javascript/operators/import"
    },
    {
      "title": "in operator",
      "href": "/javascript/operators/in"
    },
    {
      "title": "Increment (++)",
      "href": "/javascript/operators/increment"
    },
    {
      "title": "Inequality (!=)",
      "href": "/javascript/operators/inequality"
    },
    {
      "title": "instanceof",
      "href": "/javascript/operators/instanceof"
    },
    {
      "title": "Left shift (<<)",
      "href": "/javascript/operators/left_shift"
    },
    {
      "title": "Left shift assignment (<<=)",
      "href": "/javascript/operators/left_shift_assignment"
    },
    {
      "title": "Less than (<)",
      "href": "/javascript/operators/less_than"
    },
    {
      "title": "Less than or equal (<=)",
      "href": "/javascript/operators/less_than_or_equal"
    },
    {
      "title": "Logical AND (&&)",
      "href": "/javascript/operators/logical_and"
    },
    {
      "title": "Logical AND assignment (&&=)",
      "href": "/javascript/operators/logical_and_assignment"
    },
    {
      "title": "Logical NOT (!)",
      "href": "/javascript/operators/logical_not"
    },
    {
      "title": "Logical nullish assignment (??=)",
      "href": "/javascript/operators/logical_nullish_assignment"
    },
    {
      "title": "Logical OR (||)",
      "href": "/javascript/operators/logical_or"
    },
    {
      "title": "Logical OR assignment (||=)",
      "href": "/javascript/operators/logical_or_assignment"
    },
    {
      "title": "Multiplication (*)",
      "href": "/javascript/operators/multiplication"
    },
    {
      "title": "Multiplication assignment (*=)",
      "href": "/javascript/operators/multiplication_assignment"
    },
    {
      "title": "new operator",
      "href": "/javascript/operators/new"
    },
    {
      "title": "new.target",
      "href": "/javascript/operators/new_target"
    },
    {
      "title": "Nullish coalescing operator (??)",
      "href": "/javascript/operators/nullish_coalescing"
    },
    {
      "title": "Object initializer",
      "href": "/javascript/operators/object_initializer"
    },
    {
      "title": "Optional chaining (?.)",
      "href": "/javascript/operators/optional_chaining"
    },
    {
      "title": "Property accessors",
      "href": "/javascript/operators/property_accessors"
    },
    {
      "title": "Remainder (%)",
      "href": "/javascript/operators/remainder"
    },
    {
      "title": "Remainder assignment (%=)",
      "href": "/javascript/operators/remainder_assignment"
    },
    {
      "title": "Right shift (>>)",
      "href": "/javascript/operators/right_shift"
    },
    {
      "title": "Right shift assignment (>>=)",
      "href": "/javascript/operators/right_shift_assignment"
    },
    {
      "title": "Spread syntax (...)",
      "href": "/javascript/operators/spread"
    },
    {
      "title": "Strict equality (===)",
      "href": "/javascript/operators/strict_equality"
    },
    {
      "title": "Strict inequality (!==)",
      "href": "/javascript/operators/strict_inequality"
    },
    {
      "title": "Subtraction (-)",
      "href": "/javascript/operators/subtraction"
    },
    {
      "title": "Subtraction assignment (-=)",
      "href": "/javascript/operators/subtraction_assignment"
    },
    {
      "title": "super",
      "href": "/javascript/operators/super"
    },
    {
      "title": "this",
      "href": "/javascript/operators/this"
    },
    {
      "title": "typeof",
      "href": "/javascript/operators/typeof"
    },
    {
      "title": "Unary negation (-)",
      "href": "/javascript/operators/unary_negation"
    },
    {
      "title": "Unary plus (+)",
      "href": "/javascript/operators/unary_plus"
    },
    {
      "title": "Unsigned right shift (>>>)",
      "href": "/javascript/operators/unsigned_right_shift"
    },
    {
      "title": "Unsigned right shift assignment (>>>=)",
      "href": "/javascript/operators/unsigned_right_shift_assignment"
    },
    {
      "title": "void operator",
      "href": "/javascript/operators/void"
    },
    {
      "title": "yield",
      "href": "/javascript/operators/yield"
    },
    {
      "title": "yield*",
      "href": "/javascript/operators/yield_star"
    }
  ]
}