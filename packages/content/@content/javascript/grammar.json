{
  "self": [
    "javascript",
    "grammar"
  ],
  "type": "listing",
  "title": "Lexical grammar",
  "links": {
    "mdn": "https://developer.mozilla.org/docs/Web/JavaScript/Reference/Lexical_grammar",
    "github": "https://github.com/mdn/content/blob/main/files/en-us/web/javascript/reference/lexical_grammar/index.md"
  },
  "content": {
    "intro": {
      "id": "cea7162a4f2cd19a9abfda5eafc984f7",
      "tree": {
        "type": "root",
        "children": [
          {
            "type": "element",
            "tagName": "p",
            "properties": {},
            "children": [
              {
                "type": "text",
                "value": "This page describes JavaScript's lexical grammar. The source text of ECMAScript scripts gets scanned from left to right and is converted into a sequence of input elements which are tokens, control characters, line terminators, comments or "
              },
              {
                "type": "element",
                "tagName": "a",
                "properties": {
                  "href": "/en-US/docs/Glossary/Whitespace"
                },
                "children": [
                  {
                    "type": "text",
                    "value": "white space"
                  }
                ]
              },
              {
                "type": "text",
                "value": ". ECMAScript also defines certain keywords and literals and has rules for automatic insertion of semicolons to end statements."
              }
            ]
          }
        ],
        "data": {
          "quirksMode": false
        }
      }
    },
    "seeAlso": {
      "id": "0803e6b18b636986182119fb04e120e6",
      "tree": {
        "type": "root",
        "children": [
          {
            "type": "element",
            "tagName": "ul",
            "properties": {},
            "children": [
              {
                "type": "text",
                "value": "\n"
              },
              {
                "type": "element",
                "tagName": "li",
                "properties": {},
                "children": [
                  {
                    "type": "element",
                    "tagName": "a",
                    "properties": {
                      "href": "https://tc39.es/ecma262/#sec-ecmascript-language-lexical-grammar"
                    },
                    "children": [
                      {
                        "type": "text",
                        "value": "Lexical grammar in the ECMAScript specification"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "text",
                "value": "\n"
              },
              {
                "type": "element",
                "tagName": "li",
                "properties": {},
                "children": [
                  {
                    "type": "element",
                    "tagName": "a",
                    "properties": {
                      "href": "https://whereswalden.com/2013/08/12/micro-feature-from-es6-now-in-firefox-aurora-and-nightly-binary-and-octal-numbers/"
                    },
                    "children": [
                      {
                        "type": "text",
                        "value": "Jeff Walden: Binary and octal numbers"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "text",
                "value": "\n"
              },
              {
                "type": "element",
                "tagName": "li",
                "properties": {},
                "children": [
                  {
                    "type": "element",
                    "tagName": "a",
                    "properties": {
                      "href": "https://mathiasbynens.be/notes/javascript-escapes"
                    },
                    "children": [
                      {
                        "type": "text",
                        "value": "Mathias Bynens: JavaScript character escape sequences"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "text",
                "value": "\n"
              },
              {
                "type": "element",
                "tagName": "li",
                "properties": {},
                "children": [
                  {
                    "type": "element",
                    "tagName": "a",
                    "properties": {
                      "href": "/en-US/docs/Web/JavaScript/Data_structures#boolean_type"
                    },
                    "children": [
                      {
                        "type": "text",
                        "value": "Boolean"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "text",
                "value": "\n"
              },
              {
                "type": "element",
                "tagName": "li",
                "properties": {},
                "children": [
                  {
                    "type": "element",
                    "tagName": "a",
                    "properties": {
                      "href": "/en-US/docs/Web/JavaScript/Data_structures#number_type"
                    },
                    "children": [
                      {
                        "type": "text",
                        "value": "Number"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "text",
                "value": "\n"
              },
              {
                "type": "element",
                "tagName": "li",
                "properties": {},
                "children": [
                  {
                    "type": "element",
                    "tagName": "a",
                    "properties": {
                      "href": "/en-US/docs/Web/JavaScript/Data_structures#string_type"
                    },
                    "children": [
                      {
                        "type": "text",
                        "value": "string"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "text",
                "value": "\n"
              },
              {
                "type": "element",
                "tagName": "li",
                "properties": {},
                "children": [
                  {
                    "type": "element",
                    "tagName": "a",
                    "properties": {
                      "internal": "",
                      "href": "/javascript/builtins/RegExp"
                    },
                    "children": [
                      {
                        "type": "element",
                        "tagName": "code",
                        "properties": {},
                        "children": [
                          {
                            "type": "text",
                            "value": "RegExp"
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "type": "text",
                "value": "\n"
              }
            ]
          }
        ],
        "data": {
          "quirksMode": false
        }
      }
    }
  },
  "commit": {
    "sha": "19ca7a9b0d534084d5c6e6664101cd2b3d9123d0",
    "date": "2022-05-04T00:06:15.000Z"
  },
  "children": [
    {
      "title": "Lexical grammar",
      "href": "/javascript/grammar/array_literals"
    },
    {
      "title": "Lexical grammar",
      "href": "/javascript/grammar/binary_numeric_literals"
    },
    {
      "title": "Lexical grammar",
      "href": "/javascript/grammar/boolean_literals"
    },
    {
      "title": "Lexical grammar",
      "href": "/javascript/grammar/decimal_numeric_literals"
    },
    {
      "title": "Lexical grammar",
      "href": "/javascript/grammar/hashbang_comments"
    },
    {
      "title": "Lexical grammar",
      "href": "/javascript/grammar/hexadecimal_escape_sequences"
    },
    {
      "title": "Lexical grammar",
      "href": "/javascript/grammar/hexadecimal_numeric_literals"
    },
    {
      "title": "Lexical grammar",
      "href": "/javascript/grammar/null_literal"
    },
    {
      "title": "Lexical grammar",
      "href": "/javascript/grammar/numeric_separators"
    },
    {
      "title": "Lexical grammar",
      "href": "/javascript/grammar/octal_numeric_literals"
    },
    {
      "title": "Lexical grammar",
      "href": "/javascript/grammar/regular_expression_literals"
    },
    {
      "title": "Lexical grammar",
      "href": "/javascript/grammar/string_literals"
    },
    {
      "title": "Lexical grammar",
      "href": "/javascript/grammar/unicode_escape_sequences"
    },
    {
      "title": "Lexical grammar",
      "href": "/javascript/grammar/unicode_point_escapes"
    },
    {
      "title": "grammar / shorthand_object_literals",
      "href": "/javascript/grammar/shorthand_object_literals"
    },
    {
      "title": "Template literals (Template strings)",
      "href": "/javascript/grammar/template_literals"
    },
    {
      "title": "Trailing commas",
      "href": "/javascript/grammar/trailing_commas"
    }
  ]
}