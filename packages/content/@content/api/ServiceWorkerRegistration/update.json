{
  "self": [
    "api",
    "ServiceWorkerRegistration",
    "update"
  ],
  "type": "page",
  "title": "ServiceWorkerRegistration: update() method",
  "links": {
    "mdn": "https://developer.mozilla.org/docs/Web/API/ServiceWorkerRegistration/update",
    "spec": "https://w3c.github.io/ServiceWorker/#service-worker-registration-update",
    "github": "https://github.com/mdn/content/blob/main/files/en-us/web/api/serviceworkerregistration/update/index.md"
  },
  "content": {
    "intro": {
      "id": "47d529f492bcaa51920563f4a2779911",
      "tree": {
        "type": "root",
        "children": [
          {
            "type": "element",
            "tagName": "p",
            "properties": {},
            "children": [
              {
                "type": "text",
                "value": "The "
              },
              {
                "type": "element",
                "tagName": "strong",
                "properties": {},
                "children": [
                  {
                    "type": "element",
                    "tagName": "code",
                    "properties": {},
                    "children": [
                      {
                        "type": "text",
                        "value": "update()"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "text",
                "value": " method of the\n"
              },
              {
                "type": "element",
                "tagName": "a",
                "properties": {
                  "internal": "",
                  "href": "/api/ServiceWorkerRegistration"
                },
                "children": [
                  {
                    "type": "element",
                    "tagName": "code",
                    "properties": {},
                    "children": [
                      {
                        "type": "text",
                        "value": "ServiceWorkerRegistration"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "text",
                "value": " interface attempts to update the service\nworker. It fetches the worker's script URL, and if the new worker is not byte-by-byte\nidentical to the current worker, it installs the new worker. The fetch of the worker\nbypasses any browser caches if the previous fetch occurred over 24 hours ago."
              }
            ]
          }
        ],
        "data": {
          "quirksMode": false
        }
      }
    },
    "seeAlso": {
      "id": "06fb2a37bfb40e85a76468753d52f16a",
      "tree": {
        "type": "root",
        "children": [
          {
            "type": "element",
            "tagName": "ul",
            "properties": {},
            "children": [
              {
                "type": "text",
                "value": "\n"
              },
              {
                "type": "element",
                "tagName": "li",
                "properties": {},
                "children": [
                  {
                    "type": "element",
                    "tagName": "a",
                    "properties": {
                      "href": "/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers"
                    },
                    "children": [
                      {
                        "type": "text",
                        "value": "Using Service Workers"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "text",
                "value": "\n"
              },
              {
                "type": "element",
                "tagName": "li",
                "properties": {},
                "children": [
                  {
                    "type": "element",
                    "tagName": "a",
                    "properties": {
                      "href": "https://github.com/mdn/dom-examples/tree/main/service-worker/simple-service-worker"
                    },
                    "children": [
                      {
                        "type": "text",
                        "value": "Service workers basic code example"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "text",
                "value": "\n"
              },
              {
                "type": "element",
                "tagName": "li",
                "properties": {},
                "children": [
                  {
                    "type": "element",
                    "tagName": "a",
                    "properties": {
                      "href": "/en-US/docs/Web/API/Web_Workers_API/Using_web_workers"
                    },
                    "children": [
                      {
                        "type": "text",
                        "value": "Using web workers"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "text",
                "value": "\n"
              }
            ]
          }
        ],
        "data": {
          "quirksMode": false
        }
      }
    }
  },
  "commit": {
    "sha": "89c435da452257b944b403cc9e45036fcb22590e",
    "date": "2024-02-05T10:15:39.000Z"
  },
  "usage": 0.9529599999999999,
  "support": {
    "chrome": {
      "name": "Chrome",
      "added": {
        "version": "45.0.0",
        "date": 1441065600
      },
      "removed": null,
      "usage": {
        "global": 0.23060000000000003,
        "relative": 0.9991334488734835
      },
      "history": [
        {
          "notes": [
            "Starting with Chrome 46, update() returns a promise that resolves with 'undefined' if the operation completed successfully or there was no update, and rejects if update failed. If the new worker ran but installation failed, the promise still resolves. Formerly, it raised an exception.",
            "Before Chrome 48, this method always bypassed the browser cache. Starting with Chrome 48, it only bypasses the cache when the previous service worker check was more than twenty-four hours ago."
          ],
          "added": {
            "version": "45.0.0",
            "date": 1441065600
          },
          "removed": null,
          "usage": {
            "global": 0.23060000000000003,
            "relative": 0.9991334488734835
          }
        }
      ]
    },
    "chrome_android": {
      "name": "Chrome Android",
      "added": {
        "version": "45.0.0",
        "date": 1441065600
      },
      "removed": null,
      "usage": {
        "global": 0.39559,
        "relative": 1
      },
      "history": [
        {
          "notes": [
            "Starting with Chrome 46, update() returns a promise that resolves with 'undefined' if the operation completed successfully or there was no update, and rejects if update failed. If the new worker ran but installation failed, the promise still resolves. Formerly, it raised an exception.",
            "Before Chrome 48, this method always bypassed the browser cache. Starting with Chrome 48, it only bypasses the cache when the previous service worker check was more than twenty-four hours ago."
          ],
          "added": {
            "version": "45.0.0",
            "date": 1441065600
          },
          "removed": null,
          "usage": {
            "global": 0.39559,
            "relative": 1
          }
        }
      ]
    },
    "edge": {
      "name": "Edge",
      "added": {
        "version": "17.0.0",
        "date": 1525046400
      },
      "removed": null,
      "usage": {
        "global": 0.049599999999999984,
        "relative": 1
      },
      "history": [
        {
          "notes": null,
          "added": {
            "version": "17.0.0",
            "date": 1525046400
          },
          "removed": null,
          "usage": {
            "global": 0.049599999999999984,
            "relative": 1
          }
        }
      ]
    },
    "firefox": {
      "name": "Firefox",
      "added": {
        "version": "44.0.0",
        "date": 1453766400
      },
      "removed": null,
      "usage": {
        "global": 0.0272,
        "relative": 0.9819494584837546
      },
      "history": [
        {
          "notes": null,
          "added": {
            "version": "44.0.0",
            "date": 1453766400
          },
          "removed": null,
          "usage": {
            "global": 0.0272,
            "relative": 0.9819494584837546
          }
        }
      ]
    },
    "firefox_android": {
      "name": "Firefox for Android",
      "added": {
        "version": "44.0.0",
        "date": 1453766400
      },
      "removed": null,
      "usage": {
        "global": null,
        "relative": null
      },
      "history": [
        {
          "notes": null,
          "added": {
            "version": "44.0.0",
            "date": 1453766400
          },
          "removed": null,
          "usage": {
            "global": null,
            "relative": null
          }
        }
      ]
    },
    "ie": {
      "name": "Internet Explorer",
      "added": null,
      "removed": null,
      "usage": {
        "global": null,
        "relative": null
      },
      "history": [
        {
          "notes": null,
          "added": null,
          "removed": null,
          "usage": {
            "global": null,
            "relative": null
          }
        }
      ]
    },
    "oculus": {
      "name": "Quest Browser",
      "added": {
        "version": "5.0.0",
        "date": null
      },
      "removed": null,
      "usage": {
        "global": null,
        "relative": null
      },
      "history": [
        {
          "notes": [
            "Starting with Chrome 46, update() returns a promise that resolves with 'undefined' if the operation completed successfully or there was no update, and rejects if update failed. If the new worker ran but installation failed, the promise still resolves. Formerly, it raised an exception.",
            "Before Chrome 48, this method always bypassed the browser cache. Starting with Chrome 48, it only bypasses the cache when the previous service worker check was more than twenty-four hours ago."
          ],
          "added": {
            "version": "5.0.0",
            "date": null
          },
          "removed": null,
          "usage": {
            "global": null,
            "relative": null
          }
        }
      ]
    },
    "opera": {
      "name": "Opera",
      "added": {
        "version": "32.0.0",
        "date": 1442275200
      },
      "removed": null,
      "usage": {
        "global": 0.02109999999999999,
        "relative": 1
      },
      "history": [
        {
          "notes": [
            "Starting with Opera 33, update() returns a promise that resolves with 'undefined' if the operation completed successfully or there was no update, and rejects if update failed. If the new worker ran but installation failed, the promise still resolves. Formerly, it raised an exception.",
            "Before Opera 35, this method always bypassed the browser cache. Starting with Opera 35, it only bypasses the cache when the previous service worker check was more than twenty-four hours ago."
          ],
          "added": {
            "version": "32.0.0",
            "date": 1442275200
          },
          "removed": null,
          "usage": {
            "global": 0.02109999999999999,
            "relative": 1
          }
        }
      ]
    },
    "opera_android": {
      "name": "Opera Android",
      "added": {
        "version": "32.0.0",
        "date": 1442966400
      },
      "removed": null,
      "usage": {
        "global": null,
        "relative": null
      },
      "history": [
        {
          "notes": [
            "Starting with Opera 33, update() returns a promise that resolves with 'undefined' if the operation completed successfully or there was no update, and rejects if update failed. If the new worker ran but installation failed, the promise still resolves. Formerly, it raised an exception.",
            "Before Opera 35, this method always bypassed the browser cache. Starting with Opera 35, it only bypasses the cache when the previous service worker check was more than twenty-four hours ago."
          ],
          "added": {
            "version": "32.0.0",
            "date": 1442966400
          },
          "removed": null,
          "usage": {
            "global": null,
            "relative": null
          }
        }
      ]
    },
    "safari": {
      "name": "Safari",
      "added": {
        "version": "11.1.0",
        "date": 1523491200
      },
      "removed": null,
      "usage": {
        "global": 0.03229999999999998,
        "relative": 1
      },
      "history": [
        {
          "notes": null,
          "added": {
            "version": "11.1.0",
            "date": 1523491200
          },
          "removed": null,
          "usage": {
            "global": 0.03229999999999998,
            "relative": 1
          }
        }
      ]
    },
    "safari_ios": {
      "name": "Safari on iOS",
      "added": {
        "version": "11.3.0",
        "date": 1522281600
      },
      "removed": null,
      "usage": {
        "global": 0.17326999999999995,
        "relative": 0.9888147006791072
      },
      "history": [
        {
          "notes": null,
          "added": {
            "version": "11.3.0",
            "date": 1522281600
          },
          "removed": null,
          "usage": {
            "global": 0.17326999999999995,
            "relative": 0.9888147006791072
          }
        }
      ]
    },
    "samsunginternet_android": {
      "name": "Samsung Internet",
      "added": {
        "version": "4.0.0",
        "date": 1457654400
      },
      "removed": null,
      "usage": {
        "global": 0.023299999999999977,
        "relative": 0.9628099173553719
      },
      "history": [
        {
          "notes": [
            "Starting with Samsung Internet 5.0, update() returns a promise that resolves with 'undefined' if the operation completed successfully or there was no update, and rejects if update failed. If the new worker ran but installation failed, the promise still resolves. Formerly, it raised an exception.",
            "Before Samsung Internet 5.0, this method always bypassed the browser cache. Starting with Samsung Internet 5.0, it only bypasses the cache when the previous service worker check was more than twenty-four hours ago."
          ],
          "added": {
            "version": "4.0.0",
            "date": 1457654400
          },
          "removed": null,
          "usage": {
            "global": 0.023299999999999977,
            "relative": 0.9628099173553719
          }
        }
      ]
    },
    "webview_android": {
      "name": "WebView Android",
      "added": {
        "version": "45.0.0",
        "date": 1441065600
      },
      "removed": null,
      "usage": {
        "global": null,
        "relative": null
      },
      "history": [
        {
          "notes": [
            "Starting with Chrome 46, update() returns a promise that resolves with 'undefined' if the operation completed successfully or there was no update, and rejects if update failed. If the new worker ran but installation failed, the promise still resolves. Formerly, it raised an exception.",
            "Before Chrome 48, this method always bypassed the browser cache. Starting with Chrome 48, it only bypasses the cache when the previous service worker check was more than twenty-four hours ago."
          ],
          "added": {
            "version": "45.0.0",
            "date": 1441065600
          },
          "removed": null,
          "usage": {
            "global": null,
            "relative": null
          }
        }
      ]
    }
  },
  "status": {
    "deprecated": false,
    "experimental": false,
    "standard_track": true
  }
}